{"version":3,"sources":["main.js","forms-validation.js"],"names":[],"mappingssBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["/**\n **************************[main.js]**************************\n **************************[main.js]**************************\n * Created by admin on 15.08.2017.\n */\n$.ajaxSetup({\n    headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    }\n});\n\n\n\n$(\"#payinfo\").click(function () {\n    $('.payment-info--edit').slideToggle(500);\n    $(this).toggleClass(\"open\");\n    return false;\n})\n/**************change**password**button*********/\n$(\"#change-pas\").click(function () {\n    $('.change-pas-block').slideToggle(300)\n        .toggleClass(\"open\");\n    $(this).toggleClass(\"open\");\n\n})\n/**************search****button*********/\n$(\"#butn-search\").click(function () {\n    if (window.innerWidth < 767) {\n        if ($(\".search-wrap\").hasClass('open') && $(\".search-wrap\").find('input').val()) {\n        } else {\n            $(\".search-wrap\").toggleClass(\"open\");\n            $(\".login-block\").toggleClass(\"open\");\n            return false;\n        }\n    }\n});\n/**************show**password**button*********/\n$(\".mypass\").passField({/*options*/});\n/**************menu**mobile**button*********/\n$(document).on(\"click\", \".butn-menu\", function () {\n    $('.menu-block').slideToggle();\n    $(this).toggleClass(\"open\");\n    $('.menu-block').toggleClass('open');\n})\n/************aside**menu***********/\nvar VideoFilter = (function () {\n    $container = $('.menu-container');\n    $($container).css('height', $($container).height() + 'px');\n    $toggler = $($container).find('.show-on-hover');\n    $itemsContainer = $($container).find('.menu-items');\n    $items = $($container).find('.menu-items>li');\n    $current = false;\n    $currentActive = false;\n    $resultsContainer = $('.js-filter-results');\n\n    var hideElements = function () {\n        $container.find('.menu-items>li').not($current).css('width', 0);\n    };\n\n    var showElements = function () {\n        $container.find('.menu-items>li').not($current).css('width', '170px');\n    };\n\n    var slideDownElements = function () {\n        $container.find('.menu-items>li').not($current).stop().animate({width: 0}, 500, function () {\n\n        });\n    };\n\n    var slideUpElements = function () {\n\n        $container.find('.menu-items>li').not($current).stop().animate({width: $container.width()}, 500, function () {\n        });\n    };\n\n    var showSubmenu = function () {\n        $subMenu = $current.find('.sub-menu');\n        if ($subMenu.length < 1) {\n            return false\n        }\n        $subMenu = $subMenu[0];\n        $($subMenu).slideDown();\n    };\n\n    var changeActive = function () {\n\n        if ($current.find('.sub-menu').length > 0) {\n            hideElements();\n            $current.css({'position': 'absolute', top: $current.position().top}).animate({top: 0}, 500, function () {\n                $(this).addClass('active').removeAttr('style');\n                $currentActive.removeClass('active');\n                showSubmenu();\n            });\n\n        } else {\n            hideElements();\n            var $activeClone = $currentActive.clone().removeClass('active');\n            var offset_top = $current.position().top;\n\n            $currentActive.stop().animate({top: offset_top}, 500, function () {\n                $(this).remove();\n                var $before_elem = $current.next();\n                if (!$before_elem.length) {\n                    $($activeClone).insertAfter($current.prev());\n                } else {\n                    $($activeClone).insertBefore($before_elem);\n                }\n                showElements();\n            });\n\n            $current.css({'position': 'absolute', top: $current.position().top}).animate({top: 0}, 500, function () {\n                $(this).addClass('active').removeAttr('style');\n            });\n        }\n\n    };\n\n    var loadFilteredResults = function () {\n        var href = $current.find('> a').attr('href');\n        $.get(href, function (data) {\n            $resultsContainer.html(data);\n        })\n    };\n\n    $(document).on('click', '.menu-items>li', function () {\n        if ($(this).hasClass('active')) {\n            return false;\n        }\n\n        if ($($container).find(':animated').length > 0) {\n            return false\n        }\n\n        $('.sub-menu:visible').css('display', 'none');\n        $currentActive = $($itemsContainer).find('.active');\n        $current = $(this);\n\n        loadFilteredResults();\n        changeActive();\n        return false;\n    });\n\n\n    $(document).on('mouseenter', '.show-on-hover', function () {\n        if ($($container).find(':animated').length > 0) {\n            return false\n        }\n        slideUpElements();\n    }).on('mouseleave', '.menu-container', function () {\n        if ($($container).find(':animated').length > 0) {\n            return false\n        }\n        if ($('.active').find('.sub-menu').length > 0) {\n            slideDownElements();\n        }\n    });\n})();\n\n\n\n\n\n\n\n//Stick \"GP-menu\"\n$(document).ready(function(){ \n  // $('#GP-menu').sticky({topSpacing:0});\n\n\n \t$('body').on('click', '#btn-comment-rate-modal', function(){\n \t\t//console.log('heyeyey');\n \t\t// $('#comment-rate-modal').modal();\n \t});\n  \n});\n\n\n\n\n//Submit comment on click\n//------------------------\n$('body').on('click', '#btn-submit-comment', function(){\n\t//console.log('***heyeyey');\n\tcomment_submit($(this).data('comment-route'), $(this).data('video-id'));\n});\n\n//submit contact\n$('body').on('click', '#btn-submit-contact', function(){\n    //console.log('***heyeyey');\n    sendContactForm($(this).data('contact-route'));\n});\n\n//update profile\n$('body').on('click', '#btn-update-profile', function(){\n    //console.log('***heyeyey');\n    updateProfile($(this).data('update-profile'));\n});\n\n$('body').on('click', '#btn-update-password', function(){\n    //console.log('***heyeyey');\n    updatePassword($(this).data('update-password'));\n});\n\n\n\n\n//Add/remove like on click\n//------------------------\n$('body').on('click','.btn-like', function(){\n\tif(!$(this).hasClass('btn-on')){\n\t\tmovie_like($(this));\n\t}else{\n\t\tmovie_unlike($(this));\n\t}\n});\n\n//Add/remove like on click\n//------------------------\n$('body').on('click','.btn-dislike', function(){\n\tif(!$(this).hasClass('btn-on')){\n\t\tmovie_dislike($(this));\n\t}else{\n\t\tmovie_undislike($(this));\n\t}\n});\n\n\n\nfunction comment_submit(urlCommentRoute, videoId){\n\n\tif($('#comment-text').val() === '') {\n    swal(\"Hmm\", \"Need to write a review, try again pls\", \"error\");\n\t} else {\n\n    var token = $('meta[name=\"csrf-token\"]').attr('content');\n    var fd = new FormData;\n\n    fd.append('_token', token);\n    fd.append('video_id', videoId);\n    fd.append('text', $('#comment-text').val());\n\n    $.ajax({\n        type: 'POST',\n        url: urlCommentRoute,\n        contentType: false,\n        processData: false,\n        data: fd,\n        dataType: 'html',\n        success: function(data){\n            var rep = JSON.parse(data);\n            //alert('Comment successful send!');\n           // console.log(rep);\n            if(rep.user.name === ''){\n                userName = rep.user.email;\n            } else {\n                userName = rep.user.name\n            }\n\n            $('#comment-text').val('');\n            $('#comment-rate-modal').modal('hide')\n            $(\"#new-comment-section\").append('<div class=\"comment\"><div class=\"img-block\"><img src=\"'+rep.user.picture+'\" alt=\"\"></div><div class=\"comment-text-block\"><div class=\"comment-name\">'+userName+'</div><p class=\"comment-text\">'+rep.text+'</p></div></div>');\n        },\n        error: function (data) {\n            alert('error '+data);\n        }\n    }); \n\t}//end else\n}\n\nfunction movie_like($btn) { \n  var likesCount = $('#likes-count').text();\n  var disLikesCount = $('#dislikes-count').text(); \n  var fd = new FormData;\n\t\t//...\n  fd.append('_token', '{{csrf_token()}}');\n  fd.append('id', $btn.data('video-id'));\n  fd.append('type', 'like');\n\n\n  //console.log('>>>>>\"', $btn.data('route-like'));\n\n  $.ajax({\n    type: 'POST',\n    url: $btn.data('route-like'),\n    contentType: false,\n    processData: false,\n    data: fd,\n    dataType: 'html',\n    success: function(data){ \n      $('#likes-count, #likes-count-top').text(+likesCount + 1);\n      //...\n      $('.btn-like').removeClass('btn-off').addClass('btn-on');\n      $('.btn-dislike').removeClass('.btn-on').addClass('btn-off');\n\n      var rep = JSON.parse(data);\n      //console.log(rep);\n\n      if(rep.check === 1){\n          $('#dislikes-count').text(+disLikesCount - 1);\n      } \n    },\n    error: function(data){\n        swal(\"Hmm\", \"Something went wrong, try again pls\", \"error\");\n  \t}\n  });\n}//like\n\nfunction movie_unlike($btn) { \n  var likesCount = $('#likes-count').text(); \n  var fd = new FormData;\n\n  fd.append('_token', '{{csrf_token()}}');\n  fd.append('id', $btn.data('video-id'));\n\n  $.ajax({\n    type: 'POST',\n    url: $btn.data('route-unlike'),\n    contentType: false,\n    processData: false,\n    data: fd,\n    dataType: 'html',\n    success: function(data){ \n      $('#likes-count, #likes-count-top').text(+likesCount - 1);\n      //...\n      $('.btn-like').removeClass('btn-on').addClass('btn-off');\n      // $('.btn-dislike').removeClass('.btn-off').addClass('btn-on');\n\n      var rep = JSON.parse(data); \n    },\n    error: function(data){\n      swal(\"Hmm\", \"Something went wrong, try again pls\", \"error\");\n    }\n  });\n}//unlike\n\nfunction movie_dislike($btn) { \n  var likesCount = $('#likes-count').text();\n  var disLikesCount = $('#dislikes-count').text(); \n  var fd = new FormData;\n\n  fd.append('_token', '{{csrf_token()}}');\n  fd.append('id', $btn.data('video-id'));\n  fd.append('type', 'dislike');\n\n  $.ajax({\n    type: 'POST',\n    url: $btn.data('route-like'),\n    contentType: false,\n    processData: false,\n    data: fd,\n    dataType: 'html',\n    success: function(data){ \n      $('#dislikes-count').text(+disLikesCount + 1);\n      //...\n      $('.btn-dislike').removeClass('btn-off').addClass('btn-on');\n      $('.btn-like').removeClass('btn-on').addClass('btn-off');\n      var rep = JSON.parse(data);\n      if(rep.check === 1){\n          $('#likes-count, #likes-count-top').text(+likesCount - 1);\n      } \n    },\n    error: function(data){\n        swal(\"Hmm\", \"Something went wrong, try again pls\", \"error\");\n    }\n  });\n}//dislike\n\nfunction movie_undislike($btn) { \n  var disLikesCount = $('#dislikes-count').text(); \n  var fd = new FormData;\n\n  fd.append('_token', '{{csrf_token()}}');\n  fd.append('id', $btn.data('video-id'));\n\n  $.ajax({\n    type: 'POST',\n    url: $btn.data('route-unlike'),\n    contentType: false,\n    processData: false,\n    data: fd,\n    dataType: 'html',\n    success: function(data){ \n      $('#dislikes-count').text(+disLikesCount - 1);\n      $('.btn-dislike').removeClass('btn-on').addClass('btn-off');\n      var rep = JSON.parse(data); \n    },\n    error: function(data){\n      swal(\"Hmm\", \"Something went wrong, try again pls\", \"error\");\n    }\n  });\n}//undislike\n\n\n//contact form\nfunction sendContactForm(url) {\n\n    var fd = new FormData;\n\n    fd.append('_token', '{{csrf_token()}}');\n    fd.append('category', $('#q-category').val());\n    fd.append('email', $('#user-email').val());\n    fd.append('message', $('#message-text').val());\n    $('#btn-submit-contact').prop('disabled', true);\n\n\n    $.ajax({\n        type: 'POST',\n        url: url,\n        contentType: false,\n        processData: false,\n        data: fd,\n        dataType: 'html',\n        success: function(data){\n\n       // var rep = JSON.parse(data);\n        swal(\"Cool!\", \"Email sent successfully\", \"success\");\n            $('#btn-submit-contact').prop('disabled', false);\n    },\n    error: function(data){\n        swal(\"Hmm\", \"Something went wrong, try again pls\", \"error\");\n        $('#btn-submit-contact').prop('disabled', false);\n    }\n});\n}\n\n//user profile\nfunction updateProfile(url) {\n\n    var fd = new FormData;\n\n    fd.append('_token', '{{csrf_token()}}');\n    fd.append('name', $('#user-name').val());\n    fd.append('email', $('#user-email').val());\n    fd.append('phone', $('#user-phone').val());\n    $('#btn-update-profile').prop('disabled', true);\n\n\n    $.ajax({\n        type: 'POST',\n        url: url,\n        contentType: false,\n        processData: false,\n        data: fd,\n        dataType: 'html',\n        success: function(data){\n\n            // var rep = JSON.parse(data);\n            swal(\"Cool!\", \"Profile was successfully updated\", \"success\");\n            $('#btn-update-profile').prop('disabled', false);\n        },\n        error: function(data){\n            swal(\"Hmm\", \"Something went wrong, try again pls\", \"error\");\n            $('#btn-update-profile').prop('disabled', false);\n        }\n    });\n}\n\nfunction updatePassword(url) {\n\n    var fd = new FormData;\n\n    fd.append('_token', '{{csrf_token()}}');\n    fd.append('oldpassword', $('#old-password').val());\n    fd.append('newpassword', $('#new-password').val());\n    $('#btn-update-password').prop('disabled', true);\n\n\n    $.ajax({\n        type: 'POST',\n        url: url,\n        contentType: false,\n        processData: false,\n        data: fd,\n        dataType: 'html',\n        success: function(data){\n\n            var rep = JSON.parse(data);\n            console.log(rep.errors);\n            swal(rep.title, rep.message, rep.type);\n            $('#btn-update-password').prop('disabled', false);\n        },\n        error: function(data){\n            swal(\"Hmm\", \"Something went wrong, try again pls\", \"error\");\n            $('#btn-update-password').prop('disabled', false);\n        }\n    });\n}\n\n\n\n\n\n/**\n *\n * SEARCH AUTOCOMPLETE\n * --------------------\n*/\n\n\nvar substringMatcher = function(strs) {\n  return function findMatches(q, cb) {\n    var matches, substringRegex;\n\n    // an array that will be populated with substring matches\n    matches = [];\n\n    // regex used to determine if a string contains the substring `q`\n    substrRegex = new RegExp(q, 'i');\n\n    // iterate through the pool of strings and for any string that\n    // contains the substring `q`, add it to the `matches` array\n    $.each(strs, function(i, str) {\n      if (substrRegex.test(str)) {\n        matches.push(str);\n      }\n    });\n\n    cb(matches);\n  };\n};\n\n// var states = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California',\n//   'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii',\n//   'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana',\n//   'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota',\n//   'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire',\n//   'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota',\n//   'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island',\n//   'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont',\n//   'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'\n// ];\n\nvar states = new Bloodhound({\n    datumTokenizer: Bloodhound.tokenizers.whitespace,\n    queryTokenizer: Bloodhound.tokenizers.whitespace,\n    prefetch: '/search-data'\n\n\n});\n//states.initialize();\n\n\n$('#frame-search .typeahead').typeahead({\n  hint: true,\n  highlight: true,\n  minLength: 1\n},\n{\n  name: 'states',\n  // source: substringMatcher(states)\n    source: states\n});\n\n\n/*\n1)THERE IS A PROBLEM WHEN TRYING TO IMPLEMENT THE REMOTE VERSION:\n2)IT LOOKS LIKE THE END POINT YOU CREATED DOESN'T MATCH THEIR SYSTEM\n--- please check it out ---\n//http://twitter.github.io/typeahead.js/examples/#remote\n\n\n\nvar db_keywords = new Bloodhound({\n  datumTokenizer: Bloodhound.tokenizers.whitespace,\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\n  // url points to a json file that contains an array of country names, see\n  // https://github.com/twitter/typeahead.js/blob/gh-pages/data/countries.json\n  prefetch: '',//<-- this needs to point to a local json file of values\n  remote: {\n    url: $('body').data('search-route'),//<!-- route is on the body tag\n    // wildcard: '%QUERY'\n  }\n});\n\n// passing in `null` for the `options` arguments will result in the default\n// options being used\n$('#frame-search .typeahead').typeahead(null, {\n  name: 'search-keywords',\n  display: 'value',\n  source: db_keywords\n});\n*/\n\n/**\n//PREVIOUS SEARCH SCRIPT THAT ALEX HAS DONE!\n// var searchData;\n        // var searchList = '';\n\n        // $( '.search-list' ).click(function(event) {\n        //     $( '#search-input' ).val(event.target.text);\n        //     $('.search-list-block').css('display', 'none');\n\n        //     console.log(event.target.text);\n        // });\n        // $( '#search-input' ).focus(function() {\n        //     $('.search-list-block').css('display', 'block');\n        // });\n        // $('#search-input').focusout(function(){\n        //     setTimeout(function(){ $('.search-list-block').css('display', 'none'); }, 300);\n        // });\n\n \n\n        // function getSearchData() {\n        //     $.ajax({\n        //         type: 'POST',\n        //         url: '{{route('search-data')}}',\n        //         contentType: false,\n        //         processData: false,\n        //         data: {},\n        //         dataType: 'html',\n        //         success: function(data){\n        //             var rep = JSON.parse(data);\n\n        //             searchData = rep;\n\n        //             rep.forEach(function(item, i, rep) {\n        //                 searchList = searchList+'<li><a href=\"#\">'+item.word+'</a></li>';\n        //             });\n\n        //             $(\".search-list\").html(searchList);\n\n\n        //         },\n        //         error: function(data){\n        //             console.log('error ' + data);\n        //         }\n        //     });\n        // }\n\n        // $(function(){\n        //     $(\"#search-input\").keyup(function(){\n        //         var search = $(\"#search-input\").val();\n\n\n        //         var positiveArr = searchData.filter(function(word) {\n        //             if(word.word.toLowerCase().indexOf(search.toLowerCase()) === -1){\n        //                 return false\n        //             } else {\n        //                 return true;\n        //             }\n\n        //         });\n        //         var newSearchList = '';\n        //         positiveArr.forEach(function(item, i, positiveArr) {\n        //             newSearchList = newSearchList+'<li><a href=\"#\">'+item.word+'</a></li>';\n        //         });\n\n        //         $(\".search-list\").html(newSearchList);\n        //         return false;\n        //     });\n        // });\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n *\n * INITIALIZE INTRO BACKGROUND VIDEO\n * ---------------------------------\n*/\n$('#intro-video').YTPlayer({\n  fitToBackground: true,\n  videoId: 'oJxzaBDUEB8'//youtube video ID\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n *\n * INITIALIZE INTRO BACKGROUND VIDEO\n * ---------------------------------\n*/\n$('body').on('click', '#link-update-package', function(){\n\tdocument.location.href = $(this).data('route');\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/**\n **************************[forms-validation.js]**************************\n **************************[forms-validation.js]************************** \n */\n\n// create angular app\n\tvar validationApp = angular.module('validationApp', ['ngPassword']);\n\n\t// create angular controller\n\tvalidationApp.controller('mainController', function($scope) {\n\n\t\t// function to submit the form after all validation has occurred\t\t\t\n\t\t$scope.submitForm = function() {\n\n\t\t\t// check to make sure the form is completely valid\n\t\t\tif ($scope.userForm.$valid) {\n\t\t\t\talert('our form is amazing');\n\t\t\t}\n\n\t\t};\n\n\t});\n\n\n\n\n(function() {\n  'use strict';\n\n  function $Password() {\n\n    function link(scope, element, attrs, ctrls) {\n      var formController = ctrls[1];\n      var ngModel = ctrls[0];\n      var otherPasswordModel = formController[attrs.matchPassword];\n\n      var getMatchValue = function() {\n        return otherPasswordModel.$viewValue;\n      };\n\n      scope.$watch(getMatchValue, function() {\n        ngModel.$$parseAndValidate();\n      });\n\n      // if ng1.3+\n      if (ngModel.$validators) {\n        ngModel.$validators.passwordMatch = function(modelValue) {\n          return (!modelValue && !otherPasswordModel.$modelValue) || (modelValue === otherPasswordModel.$modelValue);\n        };\n      } else {\n        ngModel.$parsers.push(function(value) {\n          ngModel.$setValidity('passwordMatch', (!value && !otherPasswordModel.$viewValue) || value === otherPasswordModel.$viewValue);\n          return value;\n        });\n      }\n\n      otherPasswordModel.$parsers.push(function(value) {\n        ngModel.$setValidity('passwordMatch', (!value && !ngModel.$viewValue) || value === ngModel.$viewValue);\n        return value;\n      });\n    }\n\n    var controllers = ['^ngModel', '^form'];\n\n    return {\n      restrict: 'A',\n      require: controllers,\n      link: link\n    }; // end return\n  }\n\n  angular.module('ngPassword', []).directive('matchPassword', $Password);\n\n  angular.module('angular.password', ['ngPassword']);\n  angular.module('angular-password', ['ngPassword']);\n\n  if (typeof module === 'object' && typeof define !== 'function') {\n    module.exports = angular.module('ngPassword');\n  }\n})();\n"]}